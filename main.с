#include <stdio.h>
#include <math.h>
#include <stdlib.h>


void getBoard(int size, char** board) { //initialising and displaying gameboard
	char symbol = 'A';

	for (int i = 0; i < size; i++)
		board[i] = malloc(sizeof(**board) * size); //dynamic memory arrangement

	for (int i = 0; i < size; i++) {						//empty board initialisation. TO LEARN: ternary operator
		printf(" %s%c%s", (i == 0) ? " " : "", symbol + i, (i == size - 1) ? "\n" : "");
		for (int j = 0; j < size; j++)
			board[i][j] = 'X';   //'X' stands for an empty board sell.
		//TODO: find a way to fill it with fish after placement phase.
	}
}

void displayBoard(int size, char** board) {		//board displaying
	for (int i = 0; i < size; i++) {
		for (int j = 0; j < size; j++) {
			if (j == 0)
				printf("%d", i + 1);
			printf(" %c", board[i][j]);
		}
		printf("\n");
	}
}



int main() {
	int size;
	printf("Input board size: ");
	scanf("%d", &size);
	if (size <= 3 || size > 10) {						//Size validation.
		printf("ERROR: board size is incorrect. Consider a number >2 and <8.");
		return 0;
	}

	char** board = 0;								//declaration. TO LEARN: dynamic memory in C, two-dimensional array.
	board = malloc(sizeof(*board) * size);

	getBoard(size, board);	//board generation
	displayBoard(size, board);						//IMPORTANT: use this function every time you need to re-disaply the board.

	//...


	return 0;
}