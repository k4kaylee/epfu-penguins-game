#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#include <time.h>

void getBoard(int size, char** board) { 
	for (int i = 0; i < size; i++)
		board[i] = malloc(sizeof(**board) * size); 

	for (int i = 0; i < size; i++) {						

		for (int j = 0; j < size; j++)
			board[i][j] = 'X';   
	}
}

int getSize() {
	int size;
	printf("Input board size: ");
	scanf("%d", &size);
	if (size <= 3 || size > 21) {
		printf("ERROR: board size is incorrect. Consider a number >3 and <21.");
		return 0;
	}
	return size;
}

void displayBoard(int size, char** board) {		
	system("cls");
	char symbol = 'A';
	for (int i = 0; i < size; i++)
		printf(" %s%c%s", (i == 0) ? "  " : "", symbol + i, (i == size - 1) ? "\n" : "");
	printf("\n");


	for (int i = 0; i < size; i++) {
		for (int j = 0; j < size; j++) {
			if (j == 0)
				printf("%d%s", i + 1, (i < 9) ? " " : "");
			printf(" %c", board[i][j]);
		}
		printf("\n");
	}
	printf("\n\n");
}

int letterToInt(char coordinate, int size) {
	char symbol = 'A';
	for (int i = 1; i < size; i++) {
		if (symbol == coordinate)
			return i;
		symbol += 1;
	}
	return 0;
}

void placePenguin(int size, char** board) {
	printf("Choose your row (ex. 1): ");
	int coordinateX;
	scanf("%d", &coordinateX);
	char coordinateY;
	printf("Choose your column: (ex. A): ");
	scanf(" %c", &coordinateY);	

	if (letterToInt(coordinateY, size) == 0 || coordinateX > size) {
		displayBoard(size, board);
		
		printf("Something went wrong, please, try again.\n");
		placePenguin(size, board);
	}
	for (int c = getchar(); c != '\n' && c != EOF; c = getchar());
	board[coordinateX - 1][letterToInt(coordinateY ,size) - 1] = 'P';
	displayBoard(size, board);
}




void placeFish(int size, char** board) {
	srand((unsigned int)time(NULL));
	for (int i = 0; i < size; i++) {
		for (int j = 0; j < size; j++) {
			board[i][j] = (rand() % 4) + '0';
		}
	}
	displayBoard(size, board);
}



int main() {
	int size = getSize();

	char** board = 0;								
	board = malloc(sizeof(*board) * size);

	getBoard(size, board);	
	placeFish(size, board);
	placePenguin(size, board);




	return 0;
}
